<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="283" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2018-03-11" time="03:32:09">
  <environment user="appveyor" machine-name="APPVYR-WIN" cwd="C:\projects\cosmosdb" user-domain="APPVYR-WIN" platform="Microsoft Windows Server 2012 R2 Datacenter|C:\windows|\Device\Harddisk0\Partition5" nunit-version="2.5.8.0" os-version="6.3.9600" clr-version="4.0.30319.42000" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="17.5525" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\projects\cosmosdb\test\CosmosDB.attachments.Tests.ps1" executed="True" result="Success" success="True" time="3.995" asserts="0" description="C:\projects\cosmosdb\test\CosmosDB.attachments.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbAttachmentResourcePath" executed="True" result="Success" success="True" time="2.8157" asserts="0" description="Get-CosmosDbAttachmentResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.1252" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbAttachmentResourcePath.When called with all parameters.Should not throw exception" time="0.0952" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbAttachmentResourcePath.When called with all parameters.Should return expected result" time="0.0299" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbAttachmentResourcePath.Should exist" time="2.6905" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbAttachment" executed="True" result="Success" success="True" time="0.8155" asserts="0" description="Get-CosmosDbAttachment">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no id" executed="True" result="Success" success="True" time="0.6201" asserts="0" description="When called with context parameter and no id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbAttachment.When called with context parameter and no id.Should not throw exception" time="0.5209" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbAttachment.When called with context parameter and no id.Should return expected result" time="0.0318" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbAttachment.When called with context parameter and no id.Should call expected mocks" time="0.0674" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.1408" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbAttachment.When called with context parameter and an id.Should not throw exception" time="0.1118" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbAttachment.When called with context parameter and an id.Should return expected result" time="0.0122" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbAttachment.When called with context parameter and an id.Should call expected mocks" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbAttachment.Should exist" time="0.0546" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbAttachment" executed="True" result="Success" success="True" time="0.1576" asserts="0" description="New-CosmosDbAttachment">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.1145" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbAttachment.When called with context parameter and an id.Should not throw exception" time="0.0706" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbAttachment.When called with context parameter and an id.Should return expected result" time="0.03" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbAttachment.When called with context parameter and an id.Should call expected mocks" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbAttachment.Should exist" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbAttachment" executed="True" result="Success" success="True" time="0.0864" asserts="0" description="Remove-CosmosDbAttachment">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0563" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbAttachment.When called with context parameter and an id.Should not throw exception" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbAttachment.When called with context parameter and an id.Should call expected mocks" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbAttachment.Should exist" time="0.0301" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-CosmosDbAttachment" executed="True" result="Success" success="True" time="0.1199" asserts="0" description="Set-CosmosDbAttachment">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.074" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbAttachment.When called with context parameter and an Id.Should not throw exception" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbAttachment.When called with context parameter and an Id.Should return expected result" time="0.0115" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbAttachment.When called with context parameter and an Id.Should call expected mocks" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Set-CosmosDbAttachment.Should exist" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\cosmosdb\test\CosmosDB.collections.Tests.ps1" executed="True" result="Success" success="True" time="1.9219" asserts="0" description="C:\projects\cosmosdb\test\CosmosDB.collections.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbCollectionResourcePath" executed="True" result="Success" success="True" time="0.3055" asserts="0" description="Get-CosmosDbCollectionResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0638" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbCollectionResourcePath.When called with all parameters.Should not throw exception" time="0.0277" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbCollectionResourcePath.When called with all parameters.Should return expected result" time="0.0361" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbCollectionResourcePath.Should exist" time="0.2418" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbCollectionIncludedPathIndex" executed="True" result="Success" success="True" time="0.1361" asserts="0" description="New-CosmosDbCollectionIncludedPathIndex">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.062" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollectionIncludedPathIndex.When called with all parameters.Should not throw exception" time="0.0283" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbCollectionIncludedPathIndex.When called with all parameters.Should return expected result" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbCollectionIncludedPathIndex.Should exist" time="0.0741" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbCollectionIncludedPath" executed="True" result="Success" success="True" time="0.0926" asserts="0" description="New-CosmosDbCollectionIncludedPath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0619" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollectionIncludedPath.When called with all parameters.Should not throw exception" time="0.0283" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbCollectionIncludedPath.When called with all parameters.Should return expected result" time="0.0336" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbCollectionIncludedPath.Should exist" time="0.0307" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbCollectionExcludedPath" executed="True" result="Success" success="True" time="0.1094" asserts="0" description="New-CosmosDbCollectionExcludedPath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0485" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollectionExcludedPath.When called with all parameters.Should not throw exception" time="0.0261" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbCollectionExcludedPath.When called with all parameters.Should return expected result" time="0.0224" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbCollectionExcludedPath.Should exist" time="0.0609" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbCollectionIndexingPolicy" executed="True" result="Success" success="True" time="0.3212" asserts="0" description="New-CosmosDbCollectionIndexingPolicy">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0769" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollectionIndexingPolicy.When called with all parameters.Should not throw exception" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbCollectionIndexingPolicy.When called with all parameters.Should return expected result" time="0.0431" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbCollectionIndexingPolicy.Should exist" time="0.2443" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbCollection" executed="True" result="Success" success="True" time="0.3066" asserts="0" description="Get-CosmosDbCollection">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no Id" executed="True" result="Success" success="True" time="0.1133" asserts="0" description="When called with context parameter and no Id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbCollection.When called with context parameter and no Id.Should not throw exception" time="0.0712" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbCollection.When called with context parameter and no Id.Should return expected result" time="0.0237" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbCollection.When called with context parameter and no Id.Should call expected mocks" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.1041" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbCollection.When called with context parameter and an Id.Should not throw exception" time="0.0697" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbCollection.When called with context parameter and an Id.Should return expected result" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbCollection.When called with context parameter and an Id.Should call expected mocks" time="0.0202" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbCollection.Should exist" time="0.0893" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbCollection" executed="True" result="Success" success="True" time="0.5411" asserts="0" description="New-CosmosDbCollection">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.1086" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollection.When called with context parameter and an Id.Should not throw exception" time="0.0531" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbCollection.When called with context parameter and an Id.Should return expected result" time="0.0319" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbCollection.When called with context parameter and an Id.Should call expected mocks" time="0.0235" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id and OfferThroughput parameter" executed="True" result="Success" success="True" time="0.0837" asserts="0" description="When called with context parameter and an Id and OfferThroughput parameter">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollection.When called with context parameter and an Id and OfferThroughput parameter.Should not throw exception" time="0.0538" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbCollection.When called with context parameter and an Id and OfferThroughput parameter.Should return expected result" time="0.0128" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbCollection.When called with context parameter and an Id and OfferThroughput parameter.Should call expected mocks" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id and OfferType parameter" executed="True" result="Success" success="True" time="0.1062" asserts="0" description="When called with context parameter and an Id and OfferType parameter">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollection.When called with context parameter and an Id and OfferType parameter.Should not throw exception" time="0.0654" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbCollection.When called with context parameter and an Id and OfferType parameter.Should return expected result" time="0.0224" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbCollection.When called with context parameter and an Id and OfferType parameter.Should call expected mocks" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id and PartitionKey parameter" executed="True" result="Success" success="True" time="0.0942" asserts="0" description="When called with context parameter and an Id and PartitionKey parameter">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollection.When called with context parameter and an Id and PartitionKey parameter.Should not throw exception" time="0.0543" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbCollection.When called with context parameter and an Id and PartitionKey parameter.Should return expected result" time="0.0209" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbCollection.When called with context parameter and an Id and PartitionKey parameter.Should call expected mocks" time="0.019" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id and OfferType and OfferThrougput" executed="True" result="Success" success="True" time="0.1028" asserts="0" description="When called with context parameter and an Id and OfferType and OfferThrougput">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollection.When called with context parameter and an Id and OfferType and OfferThrougput.Should not throw exception" time="0.0874" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbCollection.When called with context parameter and an Id and OfferType and OfferThrougput.Should call expected mocks" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbCollection.Should exist" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbCollection" executed="True" result="Success" success="True" time="0.1092" asserts="0" description="Remove-CosmosDbCollection">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0528" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbCollection.When called with context parameter and an Id.Should not throw exception" time="0.0384" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbCollection.When called with context parameter and an Id.Should call expected mocks" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbCollection.Should exist" time="0.0564" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\cosmosdb\test\CosmosDB.databases.Tests.ps1" executed="True" result="Success" success="True" time="0.6983" asserts="0" description="C:\projects\cosmosdb\test\CosmosDB.databases.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbDatabaseResourcePath" executed="True" result="Success" success="True" time="0.2996" asserts="0" description="Get-CosmosDbDatabaseResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.1056" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbDatabaseResourcePath.When called with all parameters.Should not throw exception" time="0.0954" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbDatabaseResourcePath.When called with all parameters.Should return expected result" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbDatabaseResourcePath.Should exist" time="0.194" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbDatabase" executed="True" result="Success" success="True" time="0.2238" asserts="0" description="Get-CosmosDbDatabase">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no Id" executed="True" result="Success" success="True" time="0.0923" asserts="0" description="When called with context parameter and no Id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbDatabase.When called with context parameter and no Id.Should not throw exception" time="0.0592" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbDatabase.When called with context parameter and no Id.Should return expected result" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbDatabase.When called with context parameter and no Id.Should call expected mocks" time="0.017" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.1026" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbDatabase.When called with context parameter and an Id.Should not throw exception" time="0.0704" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbDatabase.When called with context parameter and an Id.Should return expected result" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbDatabase.When called with context parameter and an Id.Should call expected mocks" time="0.021" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbDatabase.Should exist" time="0.0289" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbDatabase" executed="True" result="Success" success="True" time="0.0943" asserts="0" description="New-CosmosDbDatabase">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0656" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbDatabase.When called with context parameter and an Id.Should not throw exception" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbDatabase.When called with context parameter and an Id.Should return expected result" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbDatabase.When called with context parameter and an Id.Should call expected mocks" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbDatabase.Should exist" time="0.0287" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbDatabase" executed="True" result="Success" success="True" time="0.0805" asserts="0" description="Remove-CosmosDbDatabase">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0492" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbDatabase.When called with context parameter and an Id.Should not throw exception" time="0.0368" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbDatabase.When called with context parameter and an Id.Should call expected mocks" time="0.0124" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbDatabase.Should exist" time="0.0313" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\cosmosdb\test\CosmosDB.documents.Tests.ps1" executed="True" result="Success" success="True" time="0.9861" asserts="0" description="C:\projects\cosmosdb\test\CosmosDB.documents.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbDocumentResourcePath" executed="True" result="Success" success="True" time="0.2115" asserts="0" description="Get-CosmosDbDocumentResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0376" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbDocumentResourcePath.When called with all parameters.Should not throw exception" time="0.02" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbDocumentResourcePath.When called with all parameters.Should return expected result" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbDocumentResourcePath.Should exist" time="0.1739" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbDocument" executed="True" result="Success" success="True" time="0.3359" asserts="0" description="Get-CosmosDbDocument">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no Id but with header parameters" executed="True" result="Success" success="True" time="0.092" asserts="0" description="When called with context parameter and no Id but with header parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbDocument.When called with context parameter and no Id but with header parameters.Should not throw exception" time="0.0604" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbDocument.When called with context parameter and no Id but with header parameters.Should return expected result" time="0.0173" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbDocument.When called with context parameter and no Id but with header parameters.Should call expected mocks" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and no Id with headers returned" executed="True" result="Success" success="True" time="0.0829" asserts="0" description="When called with context parameter and no Id with headers returned">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbDocument.When called with context parameter and no Id with headers returned.Should not throw exception" time="0.0476" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbDocument.When called with context parameter and no Id with headers returned.Should return expected result" time="0.0236" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbDocument.When called with context parameter and no Id with headers returned.Should call expected mocks" time="0.0117" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0667" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbDocument.When called with context parameter and an Id.Should not throw exception" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbDocument.When called with context parameter and an Id.Should return expected result" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbDocument.When called with context parameter and an Id.Should call expected mocks" time="0.0115" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id and Partition Key" executed="True" result="Success" success="True" time="0.0645" asserts="0" description="When called with context parameter and an Id and Partition Key">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbDocument.When called with context parameter and an Id and Partition Key.Should not throw exception" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbDocument.When called with context parameter and an Id and Partition Key.Should return expected result" time="0.0122" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbDocument.When called with context parameter and an Id and Partition Key.Should call expected mocks" time="0.0115" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbDocument.Should exist" time="0.0298" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbDocument" executed="True" result="Success" success="True" time="0.151" asserts="0" description="New-CosmosDbDocument">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0591" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbDocument.When called with context parameter and an Id.Should not throw exception" time="0.0365" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbDocument.When called with context parameter and an Id.Should return expected result" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbDocument.When called with context parameter and an Id.Should call expected mocks" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id and Partition Key" executed="True" result="Success" success="True" time="0.063" asserts="0" description="When called with context parameter and an Id and Partition Key">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbDocument.When called with context parameter and an Id and Partition Key.Should not throw exception" time="0.0412" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbDocument.When called with context parameter and an Id and Partition Key.Should return expected result" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbDocument.When called with context parameter and an Id and Partition Key.Should call expected mocks" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbDocument.Should exist" time="0.0289" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbDocument" executed="True" result="Success" success="True" time="0.1396" asserts="0" description="Remove-CosmosDbDocument">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0487" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbDocument.When called with context parameter and an Id.Should not throw exception" time="0.0341" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbDocument.When called with context parameter and an Id.Should call expected mocks" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id and Partition Id" executed="True" result="Success" success="True" time="0.0626" asserts="0" description="When called with context parameter and an Id and Partition Id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbDocument.When called with context parameter and an Id and Partition Id.Should not throw exception" time="0.048" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbDocument.When called with context parameter and an Id and Partition Id.Should call expected mocks" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbDocument.Should exist" time="0.0283" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-CosmosDbDocument" executed="True" result="Success" success="True" time="0.1482" asserts="0" description="Set-CosmosDbDocument">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0589" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbDocument.When called with context parameter and an Id.Should not throw exception" time="0.0355" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbDocument.When called with context parameter and an Id.Should return expected result" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbDocument.When called with context parameter and an Id.Should call expected mocks" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id and Partition Id" executed="True" result="Success" success="True" time="0.0613" asserts="0" description="When called with context parameter and an Id and Partition Id">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbDocument.When called with context parameter and an Id and Partition Id.Should not throw exception" time="0.0397" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbDocument.When called with context parameter and an Id and Partition Id.Should return expected result" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbDocument.When called with context parameter and an Id and Partition Id.Should call expected mocks" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Set-CosmosDbDocument.Should exist" time="0.0279" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\cosmosdb\test\CosmosDB.offers.Tests.ps1" executed="True" result="Success" success="True" time="0.6817" asserts="0" description="C:\projects\cosmosdb\test\CosmosDB.offers.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbOfferResourcePath" executed="True" result="Success" success="True" time="0.2071" asserts="0" description="Get-CosmosDbOfferResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0298" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbOfferResourcePath.When called with all parameters.Should not throw exception" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbOfferResourcePath.When called with all parameters.Should return expected result" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbOfferResourcePath.Should exist" time="0.1773" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbOffer" executed="True" result="Success" success="True" time="0.2742" asserts="0" description="Get-CosmosDbOffer">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no Id" executed="True" result="Success" success="True" time="0.1192" asserts="0" description="When called with context parameter and no Id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbOffer.When called with context parameter and no Id.Should not throw exception" time="0.0524" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbOffer.When called with context parameter and no Id.Should return expected result" time="0.0497" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbOffer.When called with context parameter and no Id.Should call expected mocks" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0606" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbOffer.When called with context parameter and an Id.Should not throw exception" time="0.0376" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbOffer.When called with context parameter and an Id.Should return expected result" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbOffer.When called with context parameter and an Id.Should call expected mocks" time="0.0102" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and a Query" executed="True" result="Success" success="True" time="0.0679" asserts="0" description="When called with context parameter and a Query">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbOffer.When called with context parameter and a Query.Should not throw exception" time="0.0418" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbOffer.When called with context parameter and a Query.Should return expected result" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbOffer.When called with context parameter and a Query.Should call expected mocks" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbOffer.Should exist" time="0.0266" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-CosmosDbOffer" executed="True" result="Success" success="True" time="0.2004" asserts="0" description="Set-CosmosDbOffer">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and a V2 InputObject" executed="True" result="Success" success="True" time="0.0983" asserts="0" description="When called with context parameter and a V2 InputObject">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbOffer.When called with context parameter and a V2 InputObject.Should not throw exception" time="0.0764" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbOffer.When called with context parameter and a V2 InputObject.Should return expected result" time="0.0106" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbOffer.When called with context parameter and a V2 InputObject.Should call expected mocks" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and V2 InputObject with two objects" executed="True" result="Success" success="True" time="0.0763" asserts="0" description="When called with context parameter and V2 InputObject with two objects">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbOffer.When called with context parameter and V2 InputObject with two objects.Should not throw exception" time="0.0514" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbOffer.When called with context parameter and V2 InputObject with two objects.Should return expected result" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbOffer.When called with context parameter and V2 InputObject with two objects.Should call expected mocks" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Set-CosmosDbOffer.Should exist" time="0.0259" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\cosmosdb\test\CosmosDB.permissions.Tests.ps1" executed="True" result="Success" success="True" time="0.6679" asserts="0" description="C:\projects\cosmosdb\test\CosmosDB.permissions.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbPermissionResourcePath" executed="True" result="Success" success="True" time="0.1993" asserts="0" description="Get-CosmosDbPermissionResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0311" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbPermissionResourcePath.When called with all parameters.Should not throw exception" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbPermissionResourcePath.When called with all parameters.Should return expected result" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbPermissionResourcePath.Should exist" time="0.1682" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbPermission" executed="True" result="Success" success="True" time="0.306" asserts="0" description="Get-CosmosDbPermission">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no id" executed="True" result="Success" success="True" time="0.1314" asserts="0" description="When called with context parameter and no id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbPermission.When called with context parameter and no id.Should not throw exception" time="0.0513" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbPermission.When called with context parameter and no id.Should return expected result" time="0.0643" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbPermission.When called with context parameter and no id.Should call expected mocks" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0874" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbPermission.When called with context parameter and an id.Should not throw exception" time="0.0534" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbPermission.When called with context parameter and an id.Should return expected result" time="0.0209" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbPermission.When called with context parameter and an id.Should call expected mocks" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an id and token expiry" executed="True" result="Success" success="True" time="0.0602" asserts="0" description="When called with context parameter and an id and token expiry">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbPermission.When called with context parameter and an id and token expiry.Should not throw exception" time="0.0383" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbPermission.When called with context parameter and an id and token expiry.Should return expected result" time="0.011" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbPermission.When called with context parameter and an id and token expiry.Should call expected mocks" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbPermission.Should exist" time="0.0269" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbPermission" executed="True" result="Success" success="True" time="0.0939" asserts="0" description="New-CosmosDbPermission">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0579" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbPermission.When called with context parameter and an id.Should not throw exception" time="0.0363" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbPermission.When called with context parameter and an id.Should return expected result" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbPermission.When called with context parameter and an id.Should call expected mocks" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbPermission.Should exist" time="0.036" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbPermission" executed="True" result="Success" success="True" time="0.0687" asserts="0" description="Remove-CosmosDbPermission">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.045" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbPermission.When called with context parameter and an id.Should not throw exception" time="0.0312" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbPermission.When called with context parameter and an id.Should call expected mocks" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbPermission.Should exist" time="0.0237" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\cosmosdb\test\CosmosDB.storedprocedures.Tests.ps1" executed="True" result="Success" success="True" time="0.7189" asserts="0" description="C:\projects\cosmosdb\test\CosmosDB.storedprocedures.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbStoredProcedureResourcePath" executed="True" result="Success" success="True" time="0.1978" asserts="0" description="Get-CosmosDbStoredProcedureResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0299" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbStoredProcedureResourcePath.When called with all parameters.Should not throw exception" time="0.0216" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbStoredProcedureResourcePath.When called with all parameters.Should return expected result" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbStoredProcedureResourcePath.Should exist" time="0.168" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbStoredProcedure" executed="True" result="Success" success="True" time="0.1636" asserts="0" description="Get-CosmosDbStoredProcedure">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no id" executed="True" result="Success" success="True" time="0.078" asserts="0" description="When called with context parameter and no id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbStoredProcedure.When called with context parameter and no id.Should not throw exception" time="0.0485" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbStoredProcedure.When called with context parameter and no id.Should return expected result" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbStoredProcedure.When called with context parameter and no id.Should call expected mocks" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0604" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbStoredProcedure.When called with context parameter and an id.Should not throw exception" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbStoredProcedure.When called with context parameter and an id.Should return expected result" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbStoredProcedure.When called with context parameter and an id.Should call expected mocks" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbStoredProcedure.Should exist" time="0.0252" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Invoke-CosmosDbStoredProcedure" executed="True" result="Success" success="True" time="0.0827" asserts="0" description="Invoke-CosmosDbStoredProcedure">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0597" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Invoke-CosmosDbStoredProcedure.When called with context parameter and an id.Should not throw exception" time="0.031" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Invoke-CosmosDbStoredProcedure.When called with context parameter and an id.Should return expected result" time="0.0183" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Invoke-CosmosDbStoredProcedure.When called with context parameter and an id.Should call expected mocks" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Invoke-CosmosDbStoredProcedure.Should exist" time="0.023" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbStoredProcedure" executed="True" result="Success" success="True" time="0.1347" asserts="0" description="New-CosmosDbStoredProcedure">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.11" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbStoredProcedure.When called with context parameter and an id.Should not throw exception" time="0.093" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbStoredProcedure.When called with context parameter and an id.Should return expected result" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbStoredProcedure.When called with context parameter and an id.Should call expected mocks" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbStoredProcedure.Should exist" time="0.0246" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbStoredProcedure" executed="True" result="Success" success="True" time="0.0667" asserts="0" description="Remove-CosmosDbStoredProcedure">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0404" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbStoredProcedure.When called with context parameter and an id.Should not throw exception" time="0.0311" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbStoredProcedure.When called with context parameter and an id.Should call expected mocks" time="0.0093" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbStoredProcedure.Should exist" time="0.0263" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-CosmosDbStoredProcedure" executed="True" result="Success" success="True" time="0.0734" asserts="0" description="Set-CosmosDbStoredProcedure">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0496" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbStoredProcedure.When called with context parameter and an id.Should not throw exception" time="0.0331" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbStoredProcedure.When called with context parameter and an id.Should return expected result" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbStoredProcedure.When called with context parameter and an id.Should call expected mocks" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Set-CosmosDbStoredProcedure.Should exist" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\cosmosdb\test\CosmosDB.Tests.ps1" executed="True" result="Success" success="True" time="4.6315" asserts="0" description="C:\projects\cosmosdb\test\CosmosDB.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Module Manifest Tests" executed="True" result="Success" success="True" time="0.0474" asserts="0" description="Module Manifest Tests">
            <results>
              <test-case description="Passes Test-ModuleManifest" name="Module Manifest Tests.Passes Test-ModuleManifest" time="0.0474" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PSScriptAnalyzer" executed="True" result="Success" success="True" time="4.5841" asserts="0" description="PSScriptAnalyzer">
            <results>
              <test-suite type="TestFixture" name="CosmosDB Module code and CosmosDB Lib Functions" executed="True" result="Success" success="True" time="4.5841" asserts="0" description="CosmosDB Module code and CosmosDB Lib Functions">
                <results>
                  <test-case description="Passes Invoke-ScriptAnalyzer" name="PSScriptAnalyzer.CosmosDB Module code and CosmosDB Lib Functions.Passes Invoke-ScriptAnalyzer" time="4.5841" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\cosmosdb\test\CosmosDB.triggers.Tests.ps1" executed="True" result="Success" success="True" time="0.7198" asserts="0" description="C:\projects\cosmosdb\test\CosmosDB.triggers.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbTriggerResourcePath" executed="True" result="Success" success="True" time="0.2099" asserts="0" description="Get-CosmosDbTriggerResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0278" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbTriggerResourcePath.When called with all parameters.Should not throw exception" time="0.0193" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbTriggerResourcePath.When called with all parameters.Should return expected result" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbTriggerResourcePath.Should exist" time="0.1821" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbTrigger" executed="True" result="Success" success="True" time="0.292" asserts="0" description="Get-CosmosDbTrigger">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no id" executed="True" result="Success" success="True" time="0.0775" asserts="0" description="When called with context parameter and no id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbTrigger.When called with context parameter and no id.Should not throw exception" time="0.0503" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbTrigger.When called with context parameter and no id.Should return expected result" time="0.0155" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbTrigger.When called with context parameter and no id.Should call expected mocks" time="0.0117" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0559" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbTrigger.When called with context parameter and an id.Should not throw exception" time="0.0344" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbTrigger.When called with context parameter and an id.Should return expected result" time="0.0082" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbTrigger.When called with context parameter and an id.Should call expected mocks" time="0.0133" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbTrigger.Should exist" time="0.1585" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbTrigger" executed="True" result="Success" success="True" time="0.0764" asserts="0" description="New-CosmosDbTrigger">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0532" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbTrigger.When called with context parameter and an id.Should not throw exception" time="0.0315" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbTrigger.When called with context parameter and an id.Should return expected result" time="0.011" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbTrigger.When called with context parameter and an id.Should call expected mocks" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbTrigger.Should exist" time="0.0232" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbTrigger" executed="True" result="Success" success="True" time="0.0666" asserts="0" description="Remove-CosmosDbTrigger">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbTrigger.When called with context parameter and an id.Should not throw exception" time="0.0317" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbTrigger.When called with context parameter and an id.Should call expected mocks" time="0.0096" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbTrigger.Should exist" time="0.0253" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-CosmosDbTrigger" executed="True" result="Success" success="True" time="0.075" asserts="0" description="Set-CosmosDbTrigger">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0502" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbTrigger.When called with context parameter and an id.Should not throw exception" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbTrigger.When called with context parameter and an id.Should return expected result" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbTrigger.When called with context parameter and an id.Should call expected mocks" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Set-CosmosDbTrigger.Should exist" time="0.0248" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\cosmosdb\test\CosmosDB.userdefinedfunctions.Tests.ps1" executed="True" result="Success" success="True" time="0.5603" asserts="0" description="C:\projects\cosmosdb\test\CosmosDB.userdefinedfunctions.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbUserDefinedFunctionResourcePath" executed="True" result="Success" success="True" time="0.2002" asserts="0" description="Get-CosmosDbUserDefinedFunctionResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.032" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbUserDefinedFunctionResourcePath.When called with all parameters.Should not throw exception" time="0.0234" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbUserDefinedFunctionResourcePath.When called with all parameters.Should return expected result" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbUserDefinedFunctionResourcePath.Should exist" time="0.1682" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbUserDefinedFunction" executed="True" result="Success" success="True" time="0.1543" asserts="0" description="Get-CosmosDbUserDefinedFunction">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no id" executed="True" result="Success" success="True" time="0.078" asserts="0" description="When called with context parameter and no id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbUserDefinedFunction.When called with context parameter and no id.Should not throw exception" time="0.0524" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbUserDefinedFunction.When called with context parameter and no id.Should return expected result" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbUserDefinedFunction.When called with context parameter and no id.Should call expected mocks" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0492" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should not throw exception" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should return expected result" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should call expected mocks" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbUserDefinedFunction.Should exist" time="0.027" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbUserDefinedFunction" executed="True" result="Success" success="True" time="0.0726" asserts="0" description="New-CosmosDbUserDefinedFunction">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.049" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should not throw exception" time="0.0302" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should return expected result" time="0.0076" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should call expected mocks" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbUserDefinedFunction.Should exist" time="0.0236" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbUserDefinedFunction" executed="True" result="Success" success="True" time="0.061" asserts="0" description="Remove-CosmosDbUserDefinedFunction">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0392" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should not throw exception" time="0.0278" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should call expected mocks" time="0.0114" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbUserDefinedFunction.Should exist" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-CosmosDbUserDefinedFunction" executed="True" result="Success" success="True" time="0.0723" asserts="0" description="Set-CosmosDbUserDefinedFunction">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0504" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should not throw exception" time="0.0313" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should return expected result" time="0.0105" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should call expected mocks" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Set-CosmosDbUserDefinedFunction.Should exist" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\cosmosdb\test\CosmosDB.users.Tests.ps1" executed="True" result="Success" success="True" time="0.5331" asserts="0" description="C:\projects\cosmosdb\test\CosmosDB.users.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbUserResourcePath" executed="True" result="Success" success="True" time="0.1919" asserts="0" description="Get-CosmosDbUserResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0279" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbUserResourcePath.When called with all parameters.Should not throw exception" time="0.0209" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbUserResourcePath.When called with all parameters.Should return expected result" time="0.007" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbUserResourcePath.Should exist" time="0.1639" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbUser" executed="True" result="Success" success="True" time="0.1449" asserts="0" description="Get-CosmosDbUser">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no id" executed="True" result="Success" success="True" time="0.0763" asserts="0" description="When called with context parameter and no id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbUser.When called with context parameter and no id.Should not throw exception" time="0.0525" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbUser.When called with context parameter and no id.Should return expected result" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbUser.When called with context parameter and no id.Should call expected mocks" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0464" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbUser.When called with context parameter and an id.Should not throw exception" time="0.0312" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbUser.When called with context parameter and an id.Should return expected result" time="0.0071" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbUser.When called with context parameter and an id.Should call expected mocks" time="0.0081" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbUser.Should exist" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbUser" executed="True" result="Success" success="True" time="0.0658" asserts="0" description="New-CosmosDbUser">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0436" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbUser.When called with context parameter and an id.Should not throw exception" time="0.0278" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbUser.When called with context parameter and an id.Should return expected result" time="0.0074" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbUser.When called with context parameter and an id.Should call expected mocks" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbUser.Should exist" time="0.0222" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbUser" executed="True" result="Success" success="True" time="0.0595" asserts="0" description="Remove-CosmosDbUser">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0357" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbUser.When called with context parameter and an id.Should not throw exception" time="0.0274" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbUser.When called with context parameter and an id.Should call expected mocks" time="0.0083" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbUser.Should exist" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-CosmosDbUser" executed="True" result="Success" success="True" time="0.071" asserts="0" description="Set-CosmosDbUser">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and Id and NewId" executed="True" result="Success" success="True" time="0.047" asserts="0" description="When called with context parameter and Id and NewId">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbUser.When called with context parameter and Id and NewId.Should not throw exception" time="0.0287" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbUser.When called with context parameter and Id and NewId.Should return expected result" time="0.0072" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbUser.When called with context parameter and Id and NewId.Should call expected mocks" time="0.0111" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Set-CosmosDbUser.Should exist" time="0.0241" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\projects\cosmosdb\test\CosmosDB.utils.Tests.ps1" executed="True" result="Success" success="True" time="1.4381" asserts="0" description="C:\projects\cosmosdb\test\CosmosDB.utils.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Custom types" executed="True" result="Success" success="True" time="0.2624" asserts="0" description="Custom types">
            <results>
              <test-suite type="TestFixture" name="CosmosDB.Context" executed="True" result="Success" success="True" time="0.1858" asserts="0" description="CosmosDB.Context">
                <results>
                  <test-case description="Should exist" name="Custom types.CosmosDB.Context.Should exist" time="0.1858" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CosmosDB.IndexingPolicy.Policy" executed="True" result="Success" success="True" time="0.0227" asserts="0" description="CosmosDB.IndexingPolicy.Policy">
                <results>
                  <test-case description="Should exist" name="Custom types.CosmosDB.IndexingPolicy.Policy.Should exist" time="0.0227" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CosmosDB.IndexingPolicy.Path.Index" executed="True" result="Success" success="True" time="0.0171" asserts="0" description="CosmosDB.IndexingPolicy.Path.Index">
                <results>
                  <test-case description="Should exist" name="Custom types.CosmosDB.IndexingPolicy.Path.Index.Should exist" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CosmosDB.IndexingPolicy.Path.IncludedPath" executed="True" result="Success" success="True" time="0.0199" asserts="0" description="CosmosDB.IndexingPolicy.Path.IncludedPath">
                <results>
                  <test-case description="Should exist" name="Custom types.CosmosDB.IndexingPolicy.Path.IncludedPath.Should exist" time="0.0199" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CosmosDB.IndexingPolicy.Path.ExcludedPath" executed="True" result="Success" success="True" time="0.0168" asserts="0" description="CosmosDB.IndexingPolicy.Path.ExcludedPath">
                <results>
                  <test-case description="Should exist" name="Custom types.CosmosDB.IndexingPolicy.Path.ExcludedPath.Should exist" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbContext" executed="True" result="Success" success="True" time="0.5866" asserts="0" description="New-CosmosDbContext">
            <results>
              <test-suite type="TestFixture" name="When called with Context parameters" executed="True" result="Success" success="True" time="0.051" asserts="0" description="When called with Context parameters">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbContext.When called with Context parameters.Should not throw exception" time="0.027" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbContext.When called with Context parameters.Should return expected result" time="0.024" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with Azure parameters and not connected to Azure" executed="True" result="Success" success="True" time="0.3904" asserts="0" description="When called with Azure parameters and not connected to Azure">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbContext.When called with Azure parameters and not connected to Azure.Should not throw exception" time="0.3509" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbContext.When called with Azure parameters and not connected to Azure.Should return expected result" time="0.021" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbContext.When called with Azure parameters and not connected to Azure.Should call expected mocks" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with Azure parameters and connected to Azure" executed="True" result="Success" success="True" time="0.08" asserts="0" description="When called with Azure parameters and connected to Azure">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbContext.When called with Azure parameters and connected to Azure.Should not throw exception" time="0.0562" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbContext.When called with Azure parameters and connected to Azure.Should return expected result" time="0.012" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbContext.When called with Azure parameters and connected to Azure.Should call expected mocks" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with Emulator parameters" executed="True" result="Success" success="True" time="0.0418" asserts="0" description="When called with Emulator parameters">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbContext.When called with Emulator parameters.Should not throw exception" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbContext.When called with Emulator parameters.Should return expected result" time="0.0206" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbContext.Should exist" time="0.0235" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbUri" executed="True" result="Success" success="True" time="0.0793" asserts="0" description="Get-CosmosDbUri">
            <results>
              <test-suite type="TestFixture" name="When called with Account parameter only" executed="True" result="Success" success="True" time="0.0303" asserts="0" description="When called with Account parameter only">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbUri.When called with Account parameter only.Should not throw exception" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbUri.When called with Account parameter only.Should return expected result" time="0.0141" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with Account and BaseUri parameters" executed="True" result="Success" success="True" time="0.0272" asserts="0" description="When called with Account and BaseUri parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbUri.When called with Account and BaseUri parameters.Should not throw exception" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbUri.When called with Account and BaseUri parameters.Should return expected result" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbUri.Should exist" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ConvertTo-CosmosDbTokenDateString" executed="True" result="Success" success="True" time="0.0519" asserts="0" description="ConvertTo-CosmosDbTokenDateString">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0301" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="ConvertTo-CosmosDbTokenDateString.When called with all parameters.Should not throw exception" time="0.018" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="ConvertTo-CosmosDbTokenDateString.When called with all parameters.Should return expected result" time="0.0121" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="ConvertTo-CosmosDbTokenDateString.Should exist" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbAuthorizationToken" executed="True" result="Success" success="True" time="0.1301" asserts="0" description="New-CosmosDbAuthorizationToken">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.1026" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbAuthorizationToken.When called with all parameters.Should not throw exception" time="0.0951" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result when" name="New-CosmosDbAuthorizationToken.When called with all parameters.Should return expected result when" time="0.0075" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbAuthorizationToken.Should exist" time="0.0276" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Invoke-CosmosDbRequest" executed="True" result="Success" success="True" time="0.3278" asserts="0" description="Invoke-CosmosDbRequest">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and Get method and ResourceType is 'users'" executed="True" result="Success" success="True" time="0.103" asserts="0" description="When called with context parameter and Get method and ResourceType is 'users'">
                <results>
                  <test-case description="Should not throw exception" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'users'.Should not throw exception" time="0.0784" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'users'.Should return expected result" time="0.0099" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'users'.Should call expected mocks" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and Get method and ResourceType is 'dbs'" executed="True" result="Success" success="True" time="0.0637" asserts="0" description="When called with context parameter and Get method and ResourceType is 'dbs'">
                <results>
                  <test-case description="Should not throw exception" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'dbs'.Should not throw exception" time="0.0406" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'dbs'.Should return expected result" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'dbs'.Should call expected mocks" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and Get method and ResourceType is 'offers'" executed="True" result="Success" success="True" time="0.0626" asserts="0" description="When called with context parameter and Get method and ResourceType is 'offers'">
                <results>
                  <test-case description="Should not throw exception" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'offers'.Should not throw exception" time="0.0396" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'offers'.Should return expected result" time="0.0086" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'offers'.Should call expected mocks" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and Post method" executed="True" result="Success" success="True" time="0.0648" asserts="0" description="When called with context parameter and Post method">
                <results>
                  <test-case description="Should not throw exception" name="Invoke-CosmosDbRequest.When called with context parameter and Post method.Should not throw exception" time="0.0407" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Invoke-CosmosDbRequest.When called with context parameter and Post method.Should return expected result" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Invoke-CosmosDbRequest.When called with context parameter and Post method.Should call expected mocks" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Invoke-CosmosDbRequest.Should exist" time="0.0337" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>