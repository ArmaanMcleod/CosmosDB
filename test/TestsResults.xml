<?xml version="1.0" encoding="utf-8" standalone="no"?>
<test-results xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="nunit_schema_2.5.xsd" name="Pester" total="283" errors="0" failures="0" not-run="0" inconclusive="0" ignored="0" skipped="0" invalid="0" date="2018-03-10" time="15:41:02">
  <environment os-version="10.0.16299" user="Dan" platform="Microsoft Windows 10 Enterprise|C:\WINDOWS|\Device\Harddisk1\Partition4" machine-name="PLAGUE02" nunit-version="2.5.8.0" user-domain="PLAGUE02" cwd="C:\Users\Dan\Source\GitHub\CosmosDB" clr-version="Unknown" />
  <culture-info current-culture="en-NZ" current-uiculture="en-US" />
  <test-suite type="TestFixture" name="Pester" executed="True" result="Success" success="True" time="14.7264" asserts="0" description="Pester">
    <results>
      <test-suite type="TestFixture" name="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.attachments.Tests.ps1" executed="True" result="Success" success="True" time="2.8057" asserts="0" description="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.attachments.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbAttachmentResourcePath" executed="True" result="Success" success="True" time="2.2169" asserts="0" description="Get-CosmosDbAttachmentResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0515" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbAttachmentResourcePath.When called with all parameters.Should not throw exception" time="0.0391" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbAttachmentResourcePath.When called with all parameters.Should return expected result" time="0.0124" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbAttachmentResourcePath.Should exist" time="2.1655" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbAttachment" executed="True" result="Success" success="True" time="0.2274" asserts="0" description="Get-CosmosDbAttachment">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no id" executed="True" result="Success" success="True" time="0.096" asserts="0" description="When called with context parameter and no id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbAttachment.When called with context parameter and no id.Should not throw exception" time="0.0625" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbAttachment.When called with context parameter and no id.Should return expected result" time="0.0158" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbAttachment.When called with context parameter and no id.Should call expected mocks" time="0.0177" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.087" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbAttachment.When called with context parameter and an id.Should not throw exception" time="0.061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbAttachment.When called with context parameter and an id.Should return expected result" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbAttachment.When called with context parameter and an id.Should call expected mocks" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbAttachment.Should exist" time="0.0445" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbAttachment" executed="True" result="Success" success="True" time="0.1263" asserts="0" description="New-CosmosDbAttachment">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0785" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbAttachment.When called with context parameter and an id.Should not throw exception" time="0.0547" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbAttachment.When called with context parameter and an id.Should return expected result" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbAttachment.When called with context parameter and an id.Should call expected mocks" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbAttachment.Should exist" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbAttachment" executed="True" result="Success" success="True" time="0.1107" asserts="0" description="Remove-CosmosDbAttachment">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0625" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbAttachment.When called with context parameter and an id.Should not throw exception" time="0.0497" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbAttachment.When called with context parameter and an id.Should call expected mocks" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbAttachment.Should exist" time="0.0483" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-CosmosDbAttachment" executed="True" result="Success" success="True" time="0.1243" asserts="0" description="Set-CosmosDbAttachment">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0765" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbAttachment.When called with context parameter and an Id.Should not throw exception" time="0.0492" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbAttachment.When called with context parameter and an Id.Should return expected result" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbAttachment.When called with context parameter and an Id.Should call expected mocks" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Set-CosmosDbAttachment.Should exist" time="0.0477" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.collections.Tests.ps1" executed="True" result="Success" success="True" time="1.6221" asserts="0" description="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.collections.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbCollectionResourcePath" executed="True" result="Success" success="True" time="0.249" asserts="0" description="Get-CosmosDbCollectionResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0434" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbCollectionResourcePath.When called with all parameters.Should not throw exception" time="0.033" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbCollectionResourcePath.When called with all parameters.Should return expected result" time="0.0104" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbCollectionResourcePath.Should exist" time="0.2057" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbCollectionIncludedPathIndex" executed="True" result="Success" success="True" time="0.1006" asserts="0" description="New-CosmosDbCollectionIncludedPathIndex">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0528" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollectionIncludedPathIndex.When called with all parameters.Should not throw exception" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbCollectionIncludedPathIndex.When called with all parameters.Should return expected result" time="0.02" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbCollectionIncludedPathIndex.Should exist" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbCollectionIncludedPath" executed="True" result="Success" success="True" time="0.1076" asserts="0" description="New-CosmosDbCollectionIncludedPath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0629" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollectionIncludedPath.When called with all parameters.Should not throw exception" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbCollectionIncludedPath.When called with all parameters.Should return expected result" time="0.024" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbCollectionIncludedPath.Should exist" time="0.0447" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbCollectionExcludedPath" executed="True" result="Success" success="True" time="0.1061" asserts="0" description="New-CosmosDbCollectionExcludedPath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.054" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollectionExcludedPath.When called with all parameters.Should not throw exception" time="0.0369" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbCollectionExcludedPath.When called with all parameters.Should return expected result" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbCollectionExcludedPath.Should exist" time="0.0521" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbCollectionIndexingPolicy" executed="True" result="Success" success="True" time="0.1103" asserts="0" description="New-CosmosDbCollectionIndexingPolicy">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0618" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollectionIndexingPolicy.When called with all parameters.Should not throw exception" time="0.0373" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbCollectionIndexingPolicy.When called with all parameters.Should return expected result" time="0.0245" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbCollectionIndexingPolicy.Should exist" time="0.0485" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbCollection" executed="True" result="Success" success="True" time="0.2714" asserts="0" description="Get-CosmosDbCollection">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no Id" executed="True" result="Success" success="True" time="0.0983" asserts="0" description="When called with context parameter and no Id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbCollection.When called with context parameter and no Id.Should not throw exception" time="0.0604" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbCollection.When called with context parameter and no Id.Should return expected result" time="0.0205" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbCollection.When called with context parameter and no Id.Should call expected mocks" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.1" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbCollection.When called with context parameter and an Id.Should not throw exception" time="0.0694" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbCollection.When called with context parameter and an Id.Should return expected result" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbCollection.When called with context parameter and an Id.Should call expected mocks" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbCollection.Should exist" time="0.0731" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbCollection" executed="True" result="Success" success="True" time="0.5599" asserts="0" description="New-CosmosDbCollection">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0862" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollection.When called with context parameter and an Id.Should not throw exception" time="0.0538" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbCollection.When called with context parameter and an Id.Should return expected result" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbCollection.When called with context parameter and an Id.Should call expected mocks" time="0.0172" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id and OfferThroughput parameter" executed="True" result="Success" success="True" time="0.1013" asserts="0" description="When called with context parameter and an Id and OfferThroughput parameter">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollection.When called with context parameter and an Id and OfferThroughput parameter.Should not throw exception" time="0.0708" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbCollection.When called with context parameter and an Id and OfferThroughput parameter.Should return expected result" time="0.0129" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbCollection.When called with context parameter and an Id and OfferThroughput parameter.Should call expected mocks" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id and OfferType parameter" executed="True" result="Success" success="True" time="0.0985" asserts="0" description="When called with context parameter and an Id and OfferType parameter">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollection.When called with context parameter and an Id and OfferType parameter.Should not throw exception" time="0.0684" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbCollection.When called with context parameter and an Id and OfferType parameter.Should return expected result" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbCollection.When called with context parameter and an Id and OfferType parameter.Should call expected mocks" time="0.0171" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id and PartitionKey parameter" executed="True" result="Success" success="True" time="0.1062" asserts="0" description="When called with context parameter and an Id and PartitionKey parameter">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollection.When called with context parameter and an Id and PartitionKey parameter.Should not throw exception" time="0.0711" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbCollection.When called with context parameter and an Id and PartitionKey parameter.Should return expected result" time="0.0176" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbCollection.When called with context parameter and an Id and PartitionKey parameter.Should call expected mocks" time="0.0175" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id and OfferType and OfferThrougput" executed="True" result="Success" success="True" time="0.1049" asserts="0" description="When called with context parameter and an Id and OfferType and OfferThrougput">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbCollection.When called with context parameter and an Id and OfferType and OfferThrougput.Should not throw exception" time="0.0901" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbCollection.When called with context parameter and an Id and OfferType and OfferThrougput.Should call expected mocks" time="0.0148" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbCollection.Should exist" time="0.0628" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbCollection" executed="True" result="Success" success="True" time="0.1172" asserts="0" description="Remove-CosmosDbCollection">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0645" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbCollection.When called with context parameter and an Id.Should not throw exception" time="0.0519" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbCollection.When called with context parameter and an Id.Should call expected mocks" time="0.0126" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbCollection.Should exist" time="0.0527" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.databases.Tests.ps1" executed="True" result="Success" success="True" time="0.7011" asserts="0" description="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.databases.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbDatabaseResourcePath" executed="True" result="Success" success="True" time="0.2669" asserts="0" description="Get-CosmosDbDatabaseResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0459" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbDatabaseResourcePath.When called with all parameters.Should not throw exception" time="0.0323" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbDatabaseResourcePath.When called with all parameters.Should return expected result" time="0.0136" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbDatabaseResourcePath.Should exist" time="0.221" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbDatabase" executed="True" result="Success" success="True" time="0.2095" asserts="0" description="Get-CosmosDbDatabase">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no Id" executed="True" result="Success" success="True" time="0.0877" asserts="0" description="When called with context parameter and no Id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbDatabase.When called with context parameter and no Id.Should not throw exception" time="0.0581" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbDatabase.When called with context parameter and no Id.Should return expected result" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbDatabase.When called with context parameter and no Id.Should call expected mocks" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0782" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbDatabase.When called with context parameter and an Id.Should not throw exception" time="0.0539" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbDatabase.When called with context parameter and an Id.Should return expected result" time="0.0097" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbDatabase.When called with context parameter and an Id.Should call expected mocks" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbDatabase.Should exist" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbDatabase" executed="True" result="Success" success="True" time="0.1236" asserts="0" description="New-CosmosDbDatabase">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0777" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbDatabase.When called with context parameter and an Id.Should not throw exception" time="0.0515" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbDatabase.When called with context parameter and an Id.Should return expected result" time="0.0125" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbDatabase.When called with context parameter and an Id.Should call expected mocks" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbDatabase.Should exist" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbDatabase" executed="True" result="Success" success="True" time="0.1011" asserts="0" description="Remove-CosmosDbDatabase">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0584" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbDatabase.When called with context parameter and an Id.Should not throw exception" time="0.0475" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbDatabase.When called with context parameter and an Id.Should call expected mocks" time="0.011" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbDatabase.Should exist" time="0.0427" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.documents.Tests.ps1" executed="True" result="Success" success="True" time="1.2137" asserts="0" description="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.documents.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbDocumentResourcePath" executed="True" result="Success" success="True" time="0.2519" asserts="0" description="Get-CosmosDbDocumentResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0452" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbDocumentResourcePath.When called with all parameters.Should not throw exception" time="0.0345" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbDocumentResourcePath.When called with all parameters.Should return expected result" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbDocumentResourcePath.Should exist" time="0.2067" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbDocument" executed="True" result="Success" success="True" time="0.3942" asserts="0" description="Get-CosmosDbDocument">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no Id but with header parameters" executed="True" result="Success" success="True" time="0.0918" asserts="0" description="When called with context parameter and no Id but with header parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbDocument.When called with context parameter and no Id but with header parameters.Should not throw exception" time="0.066" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbDocument.When called with context parameter and no Id but with header parameters.Should return expected result" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbDocument.When called with context parameter and no Id but with header parameters.Should call expected mocks" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and no Id with headers returned" executed="True" result="Success" success="True" time="0.0938" asserts="0" description="When called with context parameter and no Id with headers returned">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbDocument.When called with context parameter and no Id with headers returned.Should not throw exception" time="0.0607" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbDocument.When called with context parameter and no Id with headers returned.Should return expected result" time="0.0185" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbDocument.When called with context parameter and no Id with headers returned.Should call expected mocks" time="0.0145" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0797" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbDocument.When called with context parameter and an Id.Should not throw exception" time="0.058" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbDocument.When called with context parameter and an Id.Should return expected result" time="0.009" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbDocument.When called with context parameter and an Id.Should call expected mocks" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id and Partition Key" executed="True" result="Success" success="True" time="0.0819" asserts="0" description="When called with context parameter and an Id and Partition Key">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbDocument.When called with context parameter and an Id and Partition Key.Should not throw exception" time="0.0576" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbDocument.When called with context parameter and an Id and Partition Key.Should return expected result" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbDocument.When called with context parameter and an Id and Partition Key.Should call expected mocks" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbDocument.Should exist" time="0.047" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbDocument" executed="True" result="Success" success="True" time="0.1974" asserts="0" description="New-CosmosDbDocument">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0705" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbDocument.When called with context parameter and an Id.Should not throw exception" time="0.047" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbDocument.When called with context parameter and an Id.Should return expected result" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbDocument.When called with context parameter and an Id.Should call expected mocks" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id and Partition Key" executed="True" result="Success" success="True" time="0.0813" asserts="0" description="When called with context parameter and an Id and Partition Key">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbDocument.When called with context parameter and an Id and Partition Key.Should not throw exception" time="0.0575" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbDocument.When called with context parameter and an Id and Partition Key.Should return expected result" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbDocument.When called with context parameter and an Id and Partition Key.Should call expected mocks" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbDocument.Should exist" time="0.0456" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbDocument" executed="True" result="Success" success="True" time="0.1675" asserts="0" description="Remove-CosmosDbDocument">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0564" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbDocument.When called with context parameter and an Id.Should not throw exception" time="0.0457" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbDocument.When called with context parameter and an Id.Should call expected mocks" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id and Partition Id" executed="True" result="Success" success="True" time="0.0643" asserts="0" description="When called with context parameter and an Id and Partition Id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbDocument.When called with context parameter and an Id and Partition Id.Should not throw exception" time="0.0533" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbDocument.When called with context parameter and an Id and Partition Id.Should call expected mocks" time="0.011" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbDocument.Should exist" time="0.0469" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-CosmosDbDocument" executed="True" result="Success" success="True" time="0.2028" asserts="0" description="Set-CosmosDbDocument">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0723" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbDocument.When called with context parameter and an Id.Should not throw exception" time="0.0493" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbDocument.When called with context parameter and an Id.Should return expected result" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbDocument.When called with context parameter and an Id.Should call expected mocks" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id and Partition Id" executed="True" result="Success" success="True" time="0.0869" asserts="0" description="When called with context parameter and an Id and Partition Id">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbDocument.When called with context parameter and an Id and Partition Id.Should not throw exception" time="0.0632" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbDocument.When called with context parameter and an Id and Partition Id.Should return expected result" time="0.0092" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbDocument.When called with context parameter and an Id and Partition Id.Should call expected mocks" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Set-CosmosDbDocument.Should exist" time="0.0436" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.offers.Tests.ps1" executed="True" result="Success" success="True" time="0.8065" asserts="0" description="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.offers.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbOfferResourcePath" executed="True" result="Success" success="True" time="0.2566" asserts="0" description="Get-CosmosDbOfferResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0483" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbOfferResourcePath.When called with all parameters.Should not throw exception" time="0.0343" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbOfferResourcePath.When called with all parameters.Should return expected result" time="0.0139" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbOfferResourcePath.Should exist" time="0.2083" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbOffer" executed="True" result="Success" success="True" time="0.3309" asserts="0" description="Get-CosmosDbOffer">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no Id" executed="True" result="Success" success="True" time="0.0884" asserts="0" description="When called with context parameter and no Id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbOffer.When called with context parameter and no Id.Should not throw exception" time="0.0651" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbOffer.When called with context parameter and no Id.Should return expected result" time="0.0132" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbOffer.When called with context parameter and no Id.Should call expected mocks" time="0.01" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an Id" executed="True" result="Success" success="True" time="0.0878" asserts="0" description="When called with context parameter and an Id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbOffer.When called with context parameter and an Id.Should not throw exception" time="0.062" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbOffer.When called with context parameter and an Id.Should return expected result" time="0.0135" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbOffer.When called with context parameter and an Id.Should call expected mocks" time="0.0124" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and a Query" executed="True" result="Success" success="True" time="0.1085" asserts="0" description="When called with context parameter and a Query">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbOffer.When called with context parameter and a Query.Should not throw exception" time="0.0686" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbOffer.When called with context parameter and a Query.Should return expected result" time="0.0181" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbOffer.When called with context parameter and a Query.Should call expected mocks" time="0.0218" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbOffer.Should exist" time="0.0462" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-CosmosDbOffer" executed="True" result="Success" success="True" time="0.219" asserts="0" description="Set-CosmosDbOffer">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and a V2 InputObject" executed="True" result="Success" success="True" time="0.0799" asserts="0" description="When called with context parameter and a V2 InputObject">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbOffer.When called with context parameter and a V2 InputObject.Should not throw exception" time="0.0565" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbOffer.When called with context parameter and a V2 InputObject.Should return expected result" time="0.0089" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbOffer.When called with context parameter and a V2 InputObject.Should call expected mocks" time="0.0144" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and V2 InputObject with two objects" executed="True" result="Success" success="True" time="0.0891" asserts="0" description="When called with context parameter and V2 InputObject with two objects">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbOffer.When called with context parameter and V2 InputObject with two objects.Should not throw exception" time="0.0628" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbOffer.When called with context parameter and V2 InputObject with two objects.Should return expected result" time="0.0103" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbOffer.When called with context parameter and V2 InputObject with two objects.Should call expected mocks" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Set-CosmosDbOffer.Should exist" time="0.05" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.permissions.Tests.ps1" executed="True" result="Success" success="True" time="0.7815" asserts="0" description="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.permissions.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbPermissionResourcePath" executed="True" result="Success" success="True" time="0.2466" asserts="0" description="Get-CosmosDbPermissionResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.039" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbPermissionResourcePath.When called with all parameters.Should not throw exception" time="0.0271" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbPermissionResourcePath.When called with all parameters.Should return expected result" time="0.0119" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbPermissionResourcePath.Should exist" time="0.2076" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbPermission" executed="True" result="Success" success="True" time="0.2895" asserts="0" description="Get-CosmosDbPermission">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no id" executed="True" result="Success" success="True" time="0.085" asserts="0" description="When called with context parameter and no id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbPermission.When called with context parameter and no id.Should not throw exception" time="0.0582" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbPermission.When called with context parameter and no id.Should return expected result" time="0.013" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbPermission.When called with context parameter and no id.Should call expected mocks" time="0.0137" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0847" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbPermission.When called with context parameter and an id.Should not throw exception" time="0.0597" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbPermission.When called with context parameter and an id.Should return expected result" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbPermission.When called with context parameter and an id.Should call expected mocks" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an id and token expiry" executed="True" result="Success" success="True" time="0.0786" asserts="0" description="When called with context parameter and an id and token expiry">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbPermission.When called with context parameter and an id and token expiry.Should not throw exception" time="0.0555" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbPermission.When called with context parameter and an id and token expiry.Should return expected result" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbPermission.When called with context parameter and an id and token expiry.Should call expected mocks" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbPermission.Should exist" time="0.0411" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbPermission" executed="True" result="Success" success="True" time="0.1251" asserts="0" description="New-CosmosDbPermission">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0802" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbPermission.When called with context parameter and an id.Should not throw exception" time="0.0509" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbPermission.When called with context parameter and an id.Should return expected result" time="0.0131" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbPermission.When called with context parameter and an id.Should call expected mocks" time="0.0162" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbPermission.Should exist" time="0.0449" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbPermission" executed="True" result="Success" success="True" time="0.1203" asserts="0" description="Remove-CosmosDbPermission">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0683" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbPermission.When called with context parameter and an id.Should not throw exception" time="0.0576" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbPermission.When called with context parameter and an id.Should call expected mocks" time="0.0107" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbPermission.Should exist" time="0.052" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.storedprocedures.Tests.ps1" executed="True" result="Success" success="True" time="1.1871" asserts="0" description="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.storedprocedures.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbStoredProcedureResourcePath" executed="True" result="Success" success="True" time="0.2566" asserts="0" description="Get-CosmosDbStoredProcedureResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0413" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbStoredProcedureResourcePath.When called with all parameters.Should not throw exception" time="0.0322" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbStoredProcedureResourcePath.When called with all parameters.Should return expected result" time="0.0091" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbStoredProcedureResourcePath.Should exist" time="0.2153" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbStoredProcedure" executed="True" result="Success" success="True" time="0.3046" asserts="0" description="Get-CosmosDbStoredProcedure">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no id" executed="True" result="Success" success="True" time="0.1408" asserts="0" description="When called with context parameter and no id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbStoredProcedure.When called with context parameter and no id.Should not throw exception" time="0.0928" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbStoredProcedure.When called with context parameter and no id.Should return expected result" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbStoredProcedure.When called with context parameter and no id.Should call expected mocks" time="0.0328" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.1196" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbStoredProcedure.When called with context parameter and an id.Should not throw exception" time="0.0838" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbStoredProcedure.When called with context parameter and an id.Should return expected result" time="0.0149" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbStoredProcedure.When called with context parameter and an id.Should call expected mocks" time="0.0208" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbStoredProcedure.Should exist" time="0.0442" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Invoke-CosmosDbStoredProcedure" executed="True" result="Success" success="True" time="0.1644" asserts="0" description="Invoke-CosmosDbStoredProcedure">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0919" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Invoke-CosmosDbStoredProcedure.When called with context parameter and an id.Should not throw exception" time="0.06" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Invoke-CosmosDbStoredProcedure.When called with context parameter and an id.Should return expected result" time="0.0166" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Invoke-CosmosDbStoredProcedure.When called with context parameter and an id.Should call expected mocks" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Invoke-CosmosDbStoredProcedure.Should exist" time="0.0725" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbStoredProcedure" executed="True" result="Success" success="True" time="0.1609" asserts="0" description="New-CosmosDbStoredProcedure">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0948" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbStoredProcedure.When called with context parameter and an id.Should not throw exception" time="0.0651" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbStoredProcedure.When called with context parameter and an id.Should return expected result" time="0.0138" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbStoredProcedure.When called with context parameter and an id.Should call expected mocks" time="0.016" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbStoredProcedure.Should exist" time="0.0661" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbStoredProcedure" executed="True" result="Success" success="True" time="0.1443" asserts="0" description="Remove-CosmosDbStoredProcedure">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0788" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbStoredProcedure.When called with context parameter and an id.Should not throw exception" time="0.0646" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbStoredProcedure.When called with context parameter and an id.Should call expected mocks" time="0.0142" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbStoredProcedure.Should exist" time="0.0655" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-CosmosDbStoredProcedure" executed="True" result="Success" success="True" time="0.1563" asserts="0" description="Set-CosmosDbStoredProcedure">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0921" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbStoredProcedure.When called with context parameter and an id.Should not throw exception" time="0.067" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbStoredProcedure.When called with context parameter and an id.Should return expected result" time="0.0088" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbStoredProcedure.When called with context parameter and an id.Should call expected mocks" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Set-CosmosDbStoredProcedure.Should exist" time="0.0642" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.Tests.ps1" executed="True" result="Success" success="True" time="0.3329" asserts="0" description="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Module Manifest Tests" executed="True" result="Success" success="True" time="0.0963" asserts="0" description="Module Manifest Tests">
            <results>
              <test-case description="Passes Test-ModuleManifest" name="Module Manifest Tests.Passes Test-ModuleManifest" time="0.0963" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="PSScriptAnalyzer" executed="True" result="Success" success="True" time="0.2366" asserts="0" description="PSScriptAnalyzer">
            <results>
              <test-suite type="TestFixture" name="CosmosDB Module code and CosmosDB Lib Functions" executed="True" result="Success" success="True" time="0.2366" asserts="0" description="CosmosDB Module code and CosmosDB Lib Functions">
                <results>
                  <test-case description="Passes Invoke-ScriptAnalyzer" name="PSScriptAnalyzer.CosmosDB Module code and CosmosDB Lib Functions.Passes Invoke-ScriptAnalyzer" time="0.2366" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.triggers.Tests.ps1" executed="True" result="Success" success="True" time="1.2281" asserts="0" description="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.triggers.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbTriggerResourcePath" executed="True" result="Success" success="True" time="0.459" asserts="0" description="Get-CosmosDbTriggerResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0663" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbTriggerResourcePath.When called with all parameters.Should not throw exception" time="0.0516" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbTriggerResourcePath.When called with all parameters.Should return expected result" time="0.0147" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbTriggerResourcePath.Should exist" time="0.3926" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbTrigger" executed="True" result="Success" success="True" time="0.3246" asserts="0" description="Get-CosmosDbTrigger">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no id" executed="True" result="Success" success="True" time="0.1462" asserts="0" description="When called with context parameter and no id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbTrigger.When called with context parameter and no id.Should not throw exception" time="0.1098" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbTrigger.When called with context parameter and no id.Should return expected result" time="0.0243" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbTrigger.When called with context parameter and no id.Should call expected mocks" time="0.0121" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.1133" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbTrigger.When called with context parameter and an id.Should not throw exception" time="0.0724" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbTrigger.When called with context parameter and an id.Should return expected result" time="0.015" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbTrigger.When called with context parameter and an id.Should call expected mocks" time="0.026" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbTrigger.Should exist" time="0.0651" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbTrigger" executed="True" result="Success" success="True" time="0.1466" asserts="0" description="New-CosmosDbTrigger">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0831" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbTrigger.When called with context parameter and an id.Should not throw exception" time="0.0601" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbTrigger.When called with context parameter and an id.Should return expected result" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbTrigger.When called with context parameter and an id.Should call expected mocks" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbTrigger.Should exist" time="0.0634" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbTrigger" executed="True" result="Success" success="True" time="0.142" asserts="0" description="Remove-CosmosDbTrigger">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0767" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbTrigger.When called with context parameter and an id.Should not throw exception" time="0.061" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbTrigger.When called with context parameter and an id.Should call expected mocks" time="0.0157" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbTrigger.Should exist" time="0.0653" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-CosmosDbTrigger" executed="True" result="Success" success="True" time="0.1559" asserts="0" description="Set-CosmosDbTrigger">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0876" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbTrigger.When called with context parameter and an id.Should not throw exception" time="0.0582" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbTrigger.When called with context parameter and an id.Should return expected result" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbTrigger.When called with context parameter and an id.Should call expected mocks" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Set-CosmosDbTrigger.Should exist" time="0.0683" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.userdefinedfunctions.Tests.ps1" executed="True" result="Success" success="True" time="1.0059" asserts="0" description="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.userdefinedfunctions.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbUserDefinedFunctionResourcePath" executed="True" result="Success" success="True" time="0.3404" asserts="0" description="Get-CosmosDbUserDefinedFunctionResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0565" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbUserDefinedFunctionResourcePath.When called with all parameters.Should not throw exception" time="0.045" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbUserDefinedFunctionResourcePath.When called with all parameters.Should return expected result" time="0.0115" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbUserDefinedFunctionResourcePath.Should exist" time="0.2839" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbUserDefinedFunction" executed="True" result="Success" success="True" time="0.2608" asserts="0" description="Get-CosmosDbUserDefinedFunction">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no id" executed="True" result="Success" success="True" time="0.1016" asserts="0" description="When called with context parameter and no id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbUserDefinedFunction.When called with context parameter and no id.Should not throw exception" time="0.0613" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbUserDefinedFunction.When called with context parameter and no id.Should return expected result" time="0.0238" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbUserDefinedFunction.When called with context parameter and no id.Should call expected mocks" time="0.0165" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0969" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should not throw exception" time="0.0705" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should return expected result" time="0.0146" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should call expected mocks" time="0.0118" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbUserDefinedFunction.Should exist" time="0.0624" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbUserDefinedFunction" executed="True" result="Success" success="True" time="0.1362" asserts="0" description="New-CosmosDbUserDefinedFunction">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0843" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should not throw exception" time="0.0535" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should return expected result" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should call expected mocks" time="0.0152" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbUserDefinedFunction.Should exist" time="0.0518" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbUserDefinedFunction" executed="True" result="Success" success="True" time="0.1131" asserts="0" description="Remove-CosmosDbUserDefinedFunction">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0573" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should not throw exception" time="0.0421" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should call expected mocks" time="0.0153" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbUserDefinedFunction.Should exist" time="0.0557" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-CosmosDbUserDefinedFunction" executed="True" result="Success" success="True" time="0.1554" asserts="0" description="Set-CosmosDbUserDefinedFunction">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.1038" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should not throw exception" time="0.0691" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should return expected result" time="0.0188" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbUserDefinedFunction.When called with context parameter and an id.Should call expected mocks" time="0.0159" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Set-CosmosDbUserDefinedFunction.Should exist" time="0.0516" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.users.Tests.ps1" executed="True" result="Success" success="True" time="1.0268" asserts="0" description="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.users.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Get-CosmosDbUserResourcePath" executed="True" result="Success" success="True" time="0.3605" asserts="0" description="Get-CosmosDbUserResourcePath">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0757" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbUserResourcePath.When called with all parameters.Should not throw exception" time="0.0607" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbUserResourcePath.When called with all parameters.Should return expected result" time="0.0151" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbUserResourcePath.Should exist" time="0.2848" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbUser" executed="True" result="Success" success="True" time="0.283" asserts="0" description="Get-CosmosDbUser">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and no id" executed="True" result="Success" success="True" time="0.1086" asserts="0" description="When called with context parameter and no id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbUser.When called with context parameter and no id.Should not throw exception" time="0.0789" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbUser.When called with context parameter and no id.Should return expected result" time="0.0186" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbUser.When called with context parameter and no id.Should call expected mocks" time="0.0112" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.089" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbUser.When called with context parameter and an id.Should not throw exception" time="0.0673" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbUser.When called with context parameter and an id.Should return expected result" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Get-CosmosDbUser.When called with context parameter and an id.Should call expected mocks" time="0.0116" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbUser.Should exist" time="0.0853" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbUser" executed="True" result="Success" success="True" time="0.1678" asserts="0" description="New-CosmosDbUser">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0967" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbUser.When called with context parameter and an id.Should not throw exception" time="0.0722" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbUser.When called with context parameter and an id.Should return expected result" time="0.0161" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbUser.When called with context parameter and an id.Should call expected mocks" time="0.0085" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbUser.Should exist" time="0.0711" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Remove-CosmosDbUser" executed="True" result="Success" success="True" time="0.103" asserts="0" description="Remove-CosmosDbUser">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and an id" executed="True" result="Success" success="True" time="0.0506" asserts="0" description="When called with context parameter and an id">
                <results>
                  <test-case description="Should not throw exception" name="Remove-CosmosDbUser.When called with context parameter and an id.Should not throw exception" time="0.0393" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Remove-CosmosDbUser.When called with context parameter and an id.Should call expected mocks" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Remove-CosmosDbUser.Should exist" time="0.0525" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Set-CosmosDbUser" executed="True" result="Success" success="True" time="0.1125" asserts="0" description="Set-CosmosDbUser">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and Id and NewId" executed="True" result="Success" success="True" time="0.0666" asserts="0" description="When called with context parameter and Id and NewId">
                <results>
                  <test-case description="Should not throw exception" name="Set-CosmosDbUser.When called with context parameter and Id and NewId.Should not throw exception" time="0.0472" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Set-CosmosDbUser.When called with context parameter and Id and NewId.Should return expected result" time="0.0109" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Set-CosmosDbUser.When called with context parameter and Id and NewId.Should call expected mocks" time="0.0084" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Set-CosmosDbUser.Should exist" time="0.0459" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite type="TestFixture" name="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.utils.Tests.ps1" executed="True" result="Success" success="True" time="2.015" asserts="0" description="C:\Users\Dan\Source\GitHub\CosmosDB\test\CosmosDB.utils.Tests.ps1">
        <results>
          <test-suite type="TestFixture" name="Custom types" executed="True" result="Success" success="True" time="0.4892" asserts="0" description="Custom types">
            <results>
              <test-suite type="TestFixture" name="CosmosDB.Context" executed="True" result="Success" success="True" time="0.289" asserts="0" description="CosmosDB.Context">
                <results>
                  <test-case description="Should exist" name="Custom types.CosmosDB.Context.Should exist" time="0.289" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CosmosDB.IndexingPolicy.Policy" executed="True" result="Success" success="True" time="0.0478" asserts="0" description="CosmosDB.IndexingPolicy.Policy">
                <results>
                  <test-case description="Should exist" name="Custom types.CosmosDB.IndexingPolicy.Policy.Should exist" time="0.0478" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CosmosDB.IndexingPolicy.Path.Index" executed="True" result="Success" success="True" time="0.0543" asserts="0" description="CosmosDB.IndexingPolicy.Path.Index">
                <results>
                  <test-case description="Should exist" name="Custom types.CosmosDB.IndexingPolicy.Path.Index.Should exist" time="0.0543" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CosmosDB.IndexingPolicy.Path.IncludedPath" executed="True" result="Success" success="True" time="0.0582" asserts="0" description="CosmosDB.IndexingPolicy.Path.IncludedPath">
                <results>
                  <test-case description="Should exist" name="Custom types.CosmosDB.IndexingPolicy.Path.IncludedPath.Should exist" time="0.0582" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="CosmosDB.IndexingPolicy.Path.ExcludedPath" executed="True" result="Success" success="True" time="0.0398" asserts="0" description="CosmosDB.IndexingPolicy.Path.ExcludedPath">
                <results>
                  <test-case description="Should exist" name="Custom types.CosmosDB.IndexingPolicy.Path.ExcludedPath.Should exist" time="0.0398" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbContext" executed="True" result="Success" success="True" time="0.6511" asserts="0" description="New-CosmosDbContext">
            <results>
              <test-suite type="TestFixture" name="When called with Context parameters" executed="True" result="Success" success="True" time="0.0713" asserts="0" description="When called with Context parameters">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbContext.When called with Context parameters.Should not throw exception" time="0.0394" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbContext.When called with Context parameters.Should return expected result" time="0.032" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with Azure parameters and not connected to Azure" executed="True" result="Success" success="True" time="0.2699" asserts="0" description="When called with Azure parameters and not connected to Azure">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbContext.When called with Azure parameters and not connected to Azure.Should not throw exception" time="0.2141" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbContext.When called with Azure parameters and not connected to Azure.Should return expected result" time="0.0216" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbContext.When called with Azure parameters and not connected to Azure.Should call expected mocks" time="0.0342" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with Azure parameters and connected to Azure" executed="True" result="Success" success="True" time="0.1468" asserts="0" description="When called with Azure parameters and connected to Azure">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbContext.When called with Azure parameters and connected to Azure.Should not throw exception" time="0.1191" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbContext.When called with Azure parameters and connected to Azure.Should return expected result" time="0.0143" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="New-CosmosDbContext.When called with Azure parameters and connected to Azure.Should call expected mocks" time="0.0134" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with Emulator parameters" executed="True" result="Success" success="True" time="0.1085" asserts="0" description="When called with Emulator parameters">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbContext.When called with Emulator parameters.Should not throw exception" time="0.0698" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="New-CosmosDbContext.When called with Emulator parameters.Should return expected result" time="0.0387" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbContext.Should exist" time="0.0546" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Get-CosmosDbUri" executed="True" result="Success" success="True" time="0.1843" asserts="0" description="Get-CosmosDbUri">
            <results>
              <test-suite type="TestFixture" name="When called with Account parameter only" executed="True" result="Success" success="True" time="0.0582" asserts="0" description="When called with Account parameter only">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbUri.When called with Account parameter only.Should not throw exception" time="0.0455" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbUri.When called with Account parameter only.Should return expected result" time="0.0127" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with Account and BaseUri parameters" executed="True" result="Success" success="True" time="0.055" asserts="0" description="When called with Account and BaseUri parameters">
                <results>
                  <test-case description="Should not throw exception" name="Get-CosmosDbUri.When called with Account and BaseUri parameters.Should not throw exception" time="0.0437" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Get-CosmosDbUri.When called with Account and BaseUri parameters.Should return expected result" time="0.0113" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Get-CosmosDbUri.Should exist" time="0.0711" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="ConvertTo-CosmosDbTokenDateString" executed="True" result="Success" success="True" time="0.0898" asserts="0" description="ConvertTo-CosmosDbTokenDateString">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0489" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="ConvertTo-CosmosDbTokenDateString.When called with all parameters.Should not throw exception" time="0.0388" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="ConvertTo-CosmosDbTokenDateString.When called with all parameters.Should return expected result" time="0.0101" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="ConvertTo-CosmosDbTokenDateString.Should exist" time="0.0409" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="New-CosmosDbAuthorizationToken" executed="True" result="Success" success="True" time="0.0947" asserts="0" description="New-CosmosDbAuthorizationToken">
            <results>
              <test-suite type="TestFixture" name="When called with all parameters" executed="True" result="Success" success="True" time="0.0365" asserts="0" description="When called with all parameters">
                <results>
                  <test-case description="Should not throw exception" name="New-CosmosDbAuthorizationToken.When called with all parameters.Should not throw exception" time="0.0271" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result when" name="New-CosmosDbAuthorizationToken.When called with all parameters.Should return expected result when" time="0.0094" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="New-CosmosDbAuthorizationToken.Should exist" time="0.0582" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
          <test-suite type="TestFixture" name="Invoke-CosmosDbRequest" executed="True" result="Success" success="True" time="0.506" asserts="0" description="Invoke-CosmosDbRequest">
            <results>
              <test-suite type="TestFixture" name="When called with context parameter and Get method and ResourceType is 'users'" executed="True" result="Success" success="True" time="0.0977" asserts="0" description="When called with context parameter and Get method and ResourceType is 'users'">
                <results>
                  <test-case description="Should not throw exception" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'users'.Should not throw exception" time="0.0656" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'users'.Should return expected result" time="0.0154" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'users'.Should call expected mocks" time="0.0168" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and Get method and ResourceType is 'dbs'" executed="True" result="Success" success="True" time="0.1126" asserts="0" description="When called with context parameter and Get method and ResourceType is 'dbs'">
                <results>
                  <test-case description="Should not throw exception" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'dbs'.Should not throw exception" time="0.0757" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'dbs'.Should return expected result" time="0.0156" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'dbs'.Should call expected mocks" time="0.0212" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and Get method and ResourceType is 'offers'" executed="True" result="Success" success="True" time="0.1181" asserts="0" description="When called with context parameter and Get method and ResourceType is 'offers'">
                <results>
                  <test-case description="Should not throw exception" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'offers'.Should not throw exception" time="0.0807" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'offers'.Should return expected result" time="0.014" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Invoke-CosmosDbRequest.When called with context parameter and Get method and ResourceType is 'offers'.Should call expected mocks" time="0.0234" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-suite type="TestFixture" name="When called with context parameter and Post method" executed="True" result="Success" success="True" time="0.1186" asserts="0" description="When called with context parameter and Post method">
                <results>
                  <test-case description="Should not throw exception" name="Invoke-CosmosDbRequest.When called with context parameter and Post method.Should not throw exception" time="0.0935" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should return expected result" name="Invoke-CosmosDbRequest.When called with context parameter and Post method.Should return expected result" time="0.0087" asserts="0" success="True" result="Success" executed="True" />
                  <test-case description="Should call expected mocks" name="Invoke-CosmosDbRequest.When called with context parameter and Post method.Should call expected mocks" time="0.0164" asserts="0" success="True" result="Success" executed="True" />
                </results>
              </test-suite>
              <test-case description="Should exist" name="Invoke-CosmosDbRequest.Should exist" time="0.0588" asserts="0" success="True" result="Success" executed="True" />
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>